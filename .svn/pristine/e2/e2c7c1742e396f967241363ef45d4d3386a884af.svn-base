package com.unfpa.appsistenciamaternaunfpa.database.dao.myservicedao;

import android.database.Cursor;
import androidx.room.EntityInsertionAdapter;
import androidx.room.RoomDatabase;
import androidx.room.RoomSQLiteQuery;
import androidx.room.SharedSQLiteStatement;
import androidx.sqlite.db.SupportSQLiteStatement;
import com.unfpa.appsistenciamaternaunfpa.database.entity.myserviceentity.ServiceCenterDetailEntity;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.ArrayList;
import java.util.List;

@SuppressWarnings("unchecked")
public final class ServiceCenterDetailDAO_Impl implements ServiceCenterDetailDAO {
  private final RoomDatabase __db;

  private final EntityInsertionAdapter __insertionAdapterOfServiceCenterDetailEntity;

  private final SharedSQLiteStatement __preparedStmtOfDeleteAll;

  public ServiceCenterDetailDAO_Impl(RoomDatabase __db) {
    this.__db = __db;
    this.__insertionAdapterOfServiceCenterDetailEntity = new EntityInsertionAdapter<ServiceCenterDetailEntity>(__db) {
      @Override
      public String createQuery() {
        return "INSERT OR ABORT INTO `service_center_details`(`distance`,`nid`,`field_name`,`field_address_field_1`,`field_address_field_2`,`field_country`,`field_city`,`field_municipal_region`,`field_postal_code`,`field_telephone`,`field_timezone`,`field_hours_of_operation`,`field_service_provided`,`field_primary_doctor`,`field_primary_nurse`,`field_latitude`,`field_longitude`,`field_service_provided_1`,`uuid`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
      }

      @Override
      public void bind(SupportSQLiteStatement stmt, ServiceCenterDetailEntity value) {
        if (value.getDistance() == null) {
          stmt.bindNull(1);
        } else {
          stmt.bindString(1, value.getDistance());
        }
        if (value.getNid() == null) {
          stmt.bindNull(2);
        } else {
          stmt.bindString(2, value.getNid());
        }
        if (value.getField_name() == null) {
          stmt.bindNull(3);
        } else {
          stmt.bindString(3, value.getField_name());
        }
        if (value.getField_address_field_1() == null) {
          stmt.bindNull(4);
        } else {
          stmt.bindString(4, value.getField_address_field_1());
        }
        if (value.getField_address_field_2() == null) {
          stmt.bindNull(5);
        } else {
          stmt.bindString(5, value.getField_address_field_2());
        }
        if (value.getField_country() == null) {
          stmt.bindNull(6);
        } else {
          stmt.bindString(6, value.getField_country());
        }
        if (value.getField_city() == null) {
          stmt.bindNull(7);
        } else {
          stmt.bindString(7, value.getField_city());
        }
        if (value.getField_municipal_region() == null) {
          stmt.bindNull(8);
        } else {
          stmt.bindString(8, value.getField_municipal_region());
        }
        if (value.getField_postal_code() == null) {
          stmt.bindNull(9);
        } else {
          stmt.bindString(9, value.getField_postal_code());
        }
        if (value.getField_telephone() == null) {
          stmt.bindNull(10);
        } else {
          stmt.bindString(10, value.getField_telephone());
        }
        if (value.getField_timezone() == null) {
          stmt.bindNull(11);
        } else {
          stmt.bindString(11, value.getField_timezone());
        }
        if (value.getField_hours_of_operation() == null) {
          stmt.bindNull(12);
        } else {
          stmt.bindString(12, value.getField_hours_of_operation());
        }
        if (value.getField_service_provided() == null) {
          stmt.bindNull(13);
        } else {
          stmt.bindString(13, value.getField_service_provided());
        }
        if (value.getField_primary_doctor() == null) {
          stmt.bindNull(14);
        } else {
          stmt.bindString(14, value.getField_primary_doctor());
        }
        if (value.getField_primary_nurse() == null) {
          stmt.bindNull(15);
        } else {
          stmt.bindString(15, value.getField_primary_nurse());
        }
        if (value.getField_latitude() == null) {
          stmt.bindNull(16);
        } else {
          stmt.bindString(16, value.getField_latitude());
        }
        if (value.getField_longitude() == null) {
          stmt.bindNull(17);
        } else {
          stmt.bindString(17, value.getField_longitude());
        }
        if (value.getField_service_provided_1() == null) {
          stmt.bindNull(18);
        } else {
          stmt.bindString(18, value.getField_service_provided_1());
        }
        if (value.getUuid() == null) {
          stmt.bindNull(19);
        } else {
          stmt.bindString(19, value.getUuid());
        }
      }
    };
    this.__preparedStmtOfDeleteAll = new SharedSQLiteStatement(__db) {
      @Override
      public String createQuery() {
        final String _query = "DELETE FROM service_center_details";
        return _query;
      }
    };
  }

  @Override
  public void insert(ServiceCenterDetailEntity ServiceCenterDetailEntity) {
    __db.beginTransaction();
    try {
      __insertionAdapterOfServiceCenterDetailEntity.insert(ServiceCenterDetailEntity);
      __db.setTransactionSuccessful();
    } finally {
      __db.endTransaction();
    }
  }

  @Override
  public void deleteAll() {
    final SupportSQLiteStatement _stmt = __preparedStmtOfDeleteAll.acquire();
    __db.beginTransaction();
    try {
      _stmt.executeUpdateDelete();
      __db.setTransactionSuccessful();
    } finally {
      __db.endTransaction();
      __preparedStmtOfDeleteAll.release(_stmt);
    }
  }

  @Override
  public List<ServiceCenterDetailEntity> getAllContent(String nid) {
    final String _sql = "SELECT * from service_center_details where field_service_provided_1 like ?";
    final RoomSQLiteQuery _statement = RoomSQLiteQuery.acquire(_sql, 1);
    int _argIndex = 1;
    if (nid == null) {
      _statement.bindNull(_argIndex);
    } else {
      _statement.bindString(_argIndex, nid);
    }
    final Cursor _cursor = __db.query(_statement);
    try {
      final int _cursorIndexOfDistance = _cursor.getColumnIndexOrThrow("distance");
      final int _cursorIndexOfNid = _cursor.getColumnIndexOrThrow("nid");
      final int _cursorIndexOfFieldName = _cursor.getColumnIndexOrThrow("field_name");
      final int _cursorIndexOfFieldAddressField1 = _cursor.getColumnIndexOrThrow("field_address_field_1");
      final int _cursorIndexOfFieldAddressField2 = _cursor.getColumnIndexOrThrow("field_address_field_2");
      final int _cursorIndexOfFieldCountry = _cursor.getColumnIndexOrThrow("field_country");
      final int _cursorIndexOfFieldCity = _cursor.getColumnIndexOrThrow("field_city");
      final int _cursorIndexOfFieldMunicipalRegion = _cursor.getColumnIndexOrThrow("field_municipal_region");
      final int _cursorIndexOfFieldPostalCode = _cursor.getColumnIndexOrThrow("field_postal_code");
      final int _cursorIndexOfFieldTelephone = _cursor.getColumnIndexOrThrow("field_telephone");
      final int _cursorIndexOfFieldTimezone = _cursor.getColumnIndexOrThrow("field_timezone");
      final int _cursorIndexOfFieldHoursOfOperation = _cursor.getColumnIndexOrThrow("field_hours_of_operation");
      final int _cursorIndexOfFieldServiceProvided = _cursor.getColumnIndexOrThrow("field_service_provided");
      final int _cursorIndexOfFieldPrimaryDoctor = _cursor.getColumnIndexOrThrow("field_primary_doctor");
      final int _cursorIndexOfFieldPrimaryNurse = _cursor.getColumnIndexOrThrow("field_primary_nurse");
      final int _cursorIndexOfFieldLatitude = _cursor.getColumnIndexOrThrow("field_latitude");
      final int _cursorIndexOfFieldLongitude = _cursor.getColumnIndexOrThrow("field_longitude");
      final int _cursorIndexOfFieldServiceProvided1 = _cursor.getColumnIndexOrThrow("field_service_provided_1");
      final int _cursorIndexOfUuid = _cursor.getColumnIndexOrThrow("uuid");
      final List<ServiceCenterDetailEntity> _result = new ArrayList<ServiceCenterDetailEntity>(_cursor.getCount());
      while(_cursor.moveToNext()) {
        final ServiceCenterDetailEntity _item;
        final String _tmpNid;
        _tmpNid = _cursor.getString(_cursorIndexOfNid);
        final String _tmpField_name;
        _tmpField_name = _cursor.getString(_cursorIndexOfFieldName);
        final String _tmpField_address_field_1;
        _tmpField_address_field_1 = _cursor.getString(_cursorIndexOfFieldAddressField1);
        final String _tmpField_address_field_2;
        _tmpField_address_field_2 = _cursor.getString(_cursorIndexOfFieldAddressField2);
        final String _tmpField_country;
        _tmpField_country = _cursor.getString(_cursorIndexOfFieldCountry);
        final String _tmpField_city;
        _tmpField_city = _cursor.getString(_cursorIndexOfFieldCity);
        final String _tmpField_municipal_region;
        _tmpField_municipal_region = _cursor.getString(_cursorIndexOfFieldMunicipalRegion);
        final String _tmpField_postal_code;
        _tmpField_postal_code = _cursor.getString(_cursorIndexOfFieldPostalCode);
        final String _tmpField_telephone;
        _tmpField_telephone = _cursor.getString(_cursorIndexOfFieldTelephone);
        final String _tmpField_timezone;
        _tmpField_timezone = _cursor.getString(_cursorIndexOfFieldTimezone);
        final String _tmpField_hours_of_operation;
        _tmpField_hours_of_operation = _cursor.getString(_cursorIndexOfFieldHoursOfOperation);
        final String _tmpField_service_provided;
        _tmpField_service_provided = _cursor.getString(_cursorIndexOfFieldServiceProvided);
        final String _tmpField_primary_doctor;
        _tmpField_primary_doctor = _cursor.getString(_cursorIndexOfFieldPrimaryDoctor);
        final String _tmpField_primary_nurse;
        _tmpField_primary_nurse = _cursor.getString(_cursorIndexOfFieldPrimaryNurse);
        final String _tmpField_latitude;
        _tmpField_latitude = _cursor.getString(_cursorIndexOfFieldLatitude);
        final String _tmpField_longitude;
        _tmpField_longitude = _cursor.getString(_cursorIndexOfFieldLongitude);
        final String _tmpField_service_provided_1;
        _tmpField_service_provided_1 = _cursor.getString(_cursorIndexOfFieldServiceProvided1);
        final String _tmpUuid;
        _tmpUuid = _cursor.getString(_cursorIndexOfUuid);
        _item = new ServiceCenterDetailEntity(_tmpNid,_tmpField_name,_tmpField_address_field_1,_tmpField_address_field_2,_tmpField_country,_tmpField_city,_tmpField_municipal_region,_tmpField_postal_code,_tmpField_telephone,_tmpField_timezone,_tmpField_hours_of_operation,_tmpField_service_provided,_tmpField_primary_doctor,_tmpField_primary_nurse,_tmpField_latitude,_tmpField_longitude,_tmpField_service_provided_1,_tmpUuid);
        final String _tmpDistance;
        _tmpDistance = _cursor.getString(_cursorIndexOfDistance);
        _item.setDistance(_tmpDistance);
        _result.add(_item);
      }
      return _result;
    } finally {
      _cursor.close();
      _statement.release();
    }
  }

  @Override
  public List<ServiceCenterDetailEntity> getAllContentForSearchScreen() {
    final String _sql = "SELECT * from service_center_details ";
    final RoomSQLiteQuery _statement = RoomSQLiteQuery.acquire(_sql, 0);
    final Cursor _cursor = __db.query(_statement);
    try {
      final int _cursorIndexOfDistance = _cursor.getColumnIndexOrThrow("distance");
      final int _cursorIndexOfNid = _cursor.getColumnIndexOrThrow("nid");
      final int _cursorIndexOfFieldName = _cursor.getColumnIndexOrThrow("field_name");
      final int _cursorIndexOfFieldAddressField1 = _cursor.getColumnIndexOrThrow("field_address_field_1");
      final int _cursorIndexOfFieldAddressField2 = _cursor.getColumnIndexOrThrow("field_address_field_2");
      final int _cursorIndexOfFieldCountry = _cursor.getColumnIndexOrThrow("field_country");
      final int _cursorIndexOfFieldCity = _cursor.getColumnIndexOrThrow("field_city");
      final int _cursorIndexOfFieldMunicipalRegion = _cursor.getColumnIndexOrThrow("field_municipal_region");
      final int _cursorIndexOfFieldPostalCode = _cursor.getColumnIndexOrThrow("field_postal_code");
      final int _cursorIndexOfFieldTelephone = _cursor.getColumnIndexOrThrow("field_telephone");
      final int _cursorIndexOfFieldTimezone = _cursor.getColumnIndexOrThrow("field_timezone");
      final int _cursorIndexOfFieldHoursOfOperation = _cursor.getColumnIndexOrThrow("field_hours_of_operation");
      final int _cursorIndexOfFieldServiceProvided = _cursor.getColumnIndexOrThrow("field_service_provided");
      final int _cursorIndexOfFieldPrimaryDoctor = _cursor.getColumnIndexOrThrow("field_primary_doctor");
      final int _cursorIndexOfFieldPrimaryNurse = _cursor.getColumnIndexOrThrow("field_primary_nurse");
      final int _cursorIndexOfFieldLatitude = _cursor.getColumnIndexOrThrow("field_latitude");
      final int _cursorIndexOfFieldLongitude = _cursor.getColumnIndexOrThrow("field_longitude");
      final int _cursorIndexOfFieldServiceProvided1 = _cursor.getColumnIndexOrThrow("field_service_provided_1");
      final int _cursorIndexOfUuid = _cursor.getColumnIndexOrThrow("uuid");
      final List<ServiceCenterDetailEntity> _result = new ArrayList<ServiceCenterDetailEntity>(_cursor.getCount());
      while(_cursor.moveToNext()) {
        final ServiceCenterDetailEntity _item;
        final String _tmpNid;
        _tmpNid = _cursor.getString(_cursorIndexOfNid);
        final String _tmpField_name;
        _tmpField_name = _cursor.getString(_cursorIndexOfFieldName);
        final String _tmpField_address_field_1;
        _tmpField_address_field_1 = _cursor.getString(_cursorIndexOfFieldAddressField1);
        final String _tmpField_address_field_2;
        _tmpField_address_field_2 = _cursor.getString(_cursorIndexOfFieldAddressField2);
        final String _tmpField_country;
        _tmpField_country = _cursor.getString(_cursorIndexOfFieldCountry);
        final String _tmpField_city;
        _tmpField_city = _cursor.getString(_cursorIndexOfFieldCity);
        final String _tmpField_municipal_region;
        _tmpField_municipal_region = _cursor.getString(_cursorIndexOfFieldMunicipalRegion);
        final String _tmpField_postal_code;
        _tmpField_postal_code = _cursor.getString(_cursorIndexOfFieldPostalCode);
        final String _tmpField_telephone;
        _tmpField_telephone = _cursor.getString(_cursorIndexOfFieldTelephone);
        final String _tmpField_timezone;
        _tmpField_timezone = _cursor.getString(_cursorIndexOfFieldTimezone);
        final String _tmpField_hours_of_operation;
        _tmpField_hours_of_operation = _cursor.getString(_cursorIndexOfFieldHoursOfOperation);
        final String _tmpField_service_provided;
        _tmpField_service_provided = _cursor.getString(_cursorIndexOfFieldServiceProvided);
        final String _tmpField_primary_doctor;
        _tmpField_primary_doctor = _cursor.getString(_cursorIndexOfFieldPrimaryDoctor);
        final String _tmpField_primary_nurse;
        _tmpField_primary_nurse = _cursor.getString(_cursorIndexOfFieldPrimaryNurse);
        final String _tmpField_latitude;
        _tmpField_latitude = _cursor.getString(_cursorIndexOfFieldLatitude);
        final String _tmpField_longitude;
        _tmpField_longitude = _cursor.getString(_cursorIndexOfFieldLongitude);
        final String _tmpField_service_provided_1;
        _tmpField_service_provided_1 = _cursor.getString(_cursorIndexOfFieldServiceProvided1);
        final String _tmpUuid;
        _tmpUuid = _cursor.getString(_cursorIndexOfUuid);
        _item = new ServiceCenterDetailEntity(_tmpNid,_tmpField_name,_tmpField_address_field_1,_tmpField_address_field_2,_tmpField_country,_tmpField_city,_tmpField_municipal_region,_tmpField_postal_code,_tmpField_telephone,_tmpField_timezone,_tmpField_hours_of_operation,_tmpField_service_provided,_tmpField_primary_doctor,_tmpField_primary_nurse,_tmpField_latitude,_tmpField_longitude,_tmpField_service_provided_1,_tmpUuid);
        final String _tmpDistance;
        _tmpDistance = _cursor.getString(_cursorIndexOfDistance);
        _item.setDistance(_tmpDistance);
        _result.add(_item);
      }
      return _result;
    } finally {
      _cursor.close();
      _statement.release();
    }
  }

  @Override
  public List<ServiceCenterDetailEntity> getContentCenterListSearch(String strSearch) {
    final String _sql = "SELECT * from service_center_details WHERE (field_name LIKE '%' || ? || '%' OR  field_address_field_1 LIKE '%' || ? || '%' OR  field_address_field_2 LIKE '%' || ? || '%' OR  field_country LIKE '%' || ? || '%' OR  field_city LIKE '%' || ? || '%' OR  field_municipal_region LIKE '%' || ? || '%' OR  field_postal_code LIKE '%' || ? || '%')";
    final RoomSQLiteQuery _statement = RoomSQLiteQuery.acquire(_sql, 7);
    int _argIndex = 1;
    if (strSearch == null) {
      _statement.bindNull(_argIndex);
    } else {
      _statement.bindString(_argIndex, strSearch);
    }
    _argIndex = 2;
    if (strSearch == null) {
      _statement.bindNull(_argIndex);
    } else {
      _statement.bindString(_argIndex, strSearch);
    }
    _argIndex = 3;
    if (strSearch == null) {
      _statement.bindNull(_argIndex);
    } else {
      _statement.bindString(_argIndex, strSearch);
    }
    _argIndex = 4;
    if (strSearch == null) {
      _statement.bindNull(_argIndex);
    } else {
      _statement.bindString(_argIndex, strSearch);
    }
    _argIndex = 5;
    if (strSearch == null) {
      _statement.bindNull(_argIndex);
    } else {
      _statement.bindString(_argIndex, strSearch);
    }
    _argIndex = 6;
    if (strSearch == null) {
      _statement.bindNull(_argIndex);
    } else {
      _statement.bindString(_argIndex, strSearch);
    }
    _argIndex = 7;
    if (strSearch == null) {
      _statement.bindNull(_argIndex);
    } else {
      _statement.bindString(_argIndex, strSearch);
    }
    final Cursor _cursor = __db.query(_statement);
    try {
      final int _cursorIndexOfDistance = _cursor.getColumnIndexOrThrow("distance");
      final int _cursorIndexOfNid = _cursor.getColumnIndexOrThrow("nid");
      final int _cursorIndexOfFieldName = _cursor.getColumnIndexOrThrow("field_name");
      final int _cursorIndexOfFieldAddressField1 = _cursor.getColumnIndexOrThrow("field_address_field_1");
      final int _cursorIndexOfFieldAddressField2 = _cursor.getColumnIndexOrThrow("field_address_field_2");
      final int _cursorIndexOfFieldCountry = _cursor.getColumnIndexOrThrow("field_country");
      final int _cursorIndexOfFieldCity = _cursor.getColumnIndexOrThrow("field_city");
      final int _cursorIndexOfFieldMunicipalRegion = _cursor.getColumnIndexOrThrow("field_municipal_region");
      final int _cursorIndexOfFieldPostalCode = _cursor.getColumnIndexOrThrow("field_postal_code");
      final int _cursorIndexOfFieldTelephone = _cursor.getColumnIndexOrThrow("field_telephone");
      final int _cursorIndexOfFieldTimezone = _cursor.getColumnIndexOrThrow("field_timezone");
      final int _cursorIndexOfFieldHoursOfOperation = _cursor.getColumnIndexOrThrow("field_hours_of_operation");
      final int _cursorIndexOfFieldServiceProvided = _cursor.getColumnIndexOrThrow("field_service_provided");
      final int _cursorIndexOfFieldPrimaryDoctor = _cursor.getColumnIndexOrThrow("field_primary_doctor");
      final int _cursorIndexOfFieldPrimaryNurse = _cursor.getColumnIndexOrThrow("field_primary_nurse");
      final int _cursorIndexOfFieldLatitude = _cursor.getColumnIndexOrThrow("field_latitude");
      final int _cursorIndexOfFieldLongitude = _cursor.getColumnIndexOrThrow("field_longitude");
      final int _cursorIndexOfFieldServiceProvided1 = _cursor.getColumnIndexOrThrow("field_service_provided_1");
      final int _cursorIndexOfUuid = _cursor.getColumnIndexOrThrow("uuid");
      final List<ServiceCenterDetailEntity> _result = new ArrayList<ServiceCenterDetailEntity>(_cursor.getCount());
      while(_cursor.moveToNext()) {
        final ServiceCenterDetailEntity _item;
        final String _tmpNid;
        _tmpNid = _cursor.getString(_cursorIndexOfNid);
        final String _tmpField_name;
        _tmpField_name = _cursor.getString(_cursorIndexOfFieldName);
        final String _tmpField_address_field_1;
        _tmpField_address_field_1 = _cursor.getString(_cursorIndexOfFieldAddressField1);
        final String _tmpField_address_field_2;
        _tmpField_address_field_2 = _cursor.getString(_cursorIndexOfFieldAddressField2);
        final String _tmpField_country;
        _tmpField_country = _cursor.getString(_cursorIndexOfFieldCountry);
        final String _tmpField_city;
        _tmpField_city = _cursor.getString(_cursorIndexOfFieldCity);
        final String _tmpField_municipal_region;
        _tmpField_municipal_region = _cursor.getString(_cursorIndexOfFieldMunicipalRegion);
        final String _tmpField_postal_code;
        _tmpField_postal_code = _cursor.getString(_cursorIndexOfFieldPostalCode);
        final String _tmpField_telephone;
        _tmpField_telephone = _cursor.getString(_cursorIndexOfFieldTelephone);
        final String _tmpField_timezone;
        _tmpField_timezone = _cursor.getString(_cursorIndexOfFieldTimezone);
        final String _tmpField_hours_of_operation;
        _tmpField_hours_of_operation = _cursor.getString(_cursorIndexOfFieldHoursOfOperation);
        final String _tmpField_service_provided;
        _tmpField_service_provided = _cursor.getString(_cursorIndexOfFieldServiceProvided);
        final String _tmpField_primary_doctor;
        _tmpField_primary_doctor = _cursor.getString(_cursorIndexOfFieldPrimaryDoctor);
        final String _tmpField_primary_nurse;
        _tmpField_primary_nurse = _cursor.getString(_cursorIndexOfFieldPrimaryNurse);
        final String _tmpField_latitude;
        _tmpField_latitude = _cursor.getString(_cursorIndexOfFieldLatitude);
        final String _tmpField_longitude;
        _tmpField_longitude = _cursor.getString(_cursorIndexOfFieldLongitude);
        final String _tmpField_service_provided_1;
        _tmpField_service_provided_1 = _cursor.getString(_cursorIndexOfFieldServiceProvided1);
        final String _tmpUuid;
        _tmpUuid = _cursor.getString(_cursorIndexOfUuid);
        _item = new ServiceCenterDetailEntity(_tmpNid,_tmpField_name,_tmpField_address_field_1,_tmpField_address_field_2,_tmpField_country,_tmpField_city,_tmpField_municipal_region,_tmpField_postal_code,_tmpField_telephone,_tmpField_timezone,_tmpField_hours_of_operation,_tmpField_service_provided,_tmpField_primary_doctor,_tmpField_primary_nurse,_tmpField_latitude,_tmpField_longitude,_tmpField_service_provided_1,_tmpUuid);
        final String _tmpDistance;
        _tmpDistance = _cursor.getString(_cursorIndexOfDistance);
        _item.setDistance(_tmpDistance);
        _result.add(_item);
      }
      return _result;
    } finally {
      _cursor.close();
      _statement.release();
    }
  }
}
