package com.unfpa.appsistenciamaternaunfpa.database.dao.personal;

import android.database.Cursor;
import androidx.room.EntityInsertionAdapter;
import androidx.room.RoomDatabase;
import androidx.room.RoomSQLiteQuery;
import androidx.room.SharedSQLiteStatement;
import androidx.sqlite.db.SupportSQLiteStatement;
import com.unfpa.appsistenciamaternaunfpa.database.entity.country_office_listing.CountryOfficeSettingEntity;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.ArrayList;
import java.util.List;

@SuppressWarnings("unchecked")
public final class CountryOfficeDAO_Impl implements CountryOfficeDAO {
  private final RoomDatabase __db;

  private final EntityInsertionAdapter __insertionAdapterOfCountryOfficeSettingEntity;

  private final SharedSQLiteStatement __preparedStmtOfDeleteAll;

  public CountryOfficeDAO_Impl(RoomDatabase __db) {
    this.__db = __db;
    this.__insertionAdapterOfCountryOfficeSettingEntity = new EntityInsertionAdapter<CountryOfficeSettingEntity>(__db) {
      @Override
      public String createQuery() {
        return "INSERT OR IGNORE INTO `country_office_listing`(`field_country`,`field_client_code`,`field_image`,`title`,`field_subtitle`,`field_enable_health_manager`,`field_enable_live_chat`,`field_enable_service_locator`,`field_sms_getway_url`,`field_sms_username`,`field_sms_auth`,`field_maximum_distance`,`field_language`,`field_health_management_export`,`field_contact_number`,`field_country_export`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
      }

      @Override
      public void bind(SupportSQLiteStatement stmt, CountryOfficeSettingEntity value) {
        if (value.getField_country() == null) {
          stmt.bindNull(1);
        } else {
          stmt.bindString(1, value.getField_country());
        }
        if (value.getField_client_code() == null) {
          stmt.bindNull(2);
        } else {
          stmt.bindString(2, value.getField_client_code());
        }
        if (value.getField_image() == null) {
          stmt.bindNull(3);
        } else {
          stmt.bindString(3, value.getField_image());
        }
        if (value.getTitle() == null) {
          stmt.bindNull(4);
        } else {
          stmt.bindString(4, value.getTitle());
        }
        if (value.getField_subtitle() == null) {
          stmt.bindNull(5);
        } else {
          stmt.bindString(5, value.getField_subtitle());
        }
        if (value.getField_enable_health_manager() == null) {
          stmt.bindNull(6);
        } else {
          stmt.bindString(6, value.getField_enable_health_manager());
        }
        if (value.getField_enable_live_chat() == null) {
          stmt.bindNull(7);
        } else {
          stmt.bindString(7, value.getField_enable_live_chat());
        }
        if (value.getField_enable_service_locator() == null) {
          stmt.bindNull(8);
        } else {
          stmt.bindString(8, value.getField_enable_service_locator());
        }
        if (value.getField_sms_getway_url() == null) {
          stmt.bindNull(9);
        } else {
          stmt.bindString(9, value.getField_sms_getway_url());
        }
        if (value.getField_sms_username() == null) {
          stmt.bindNull(10);
        } else {
          stmt.bindString(10, value.getField_sms_username());
        }
        if (value.getField_sms_auth() == null) {
          stmt.bindNull(11);
        } else {
          stmt.bindString(11, value.getField_sms_auth());
        }
        if (value.getField_maximum_distance() == null) {
          stmt.bindNull(12);
        } else {
          stmt.bindString(12, value.getField_maximum_distance());
        }
        if (value.getField_language() == null) {
          stmt.bindNull(13);
        } else {
          stmt.bindString(13, value.getField_language());
        }
        if (value.getField_health_management_export() == null) {
          stmt.bindNull(14);
        } else {
          stmt.bindString(14, value.getField_health_management_export());
        }
        if (value.getField_contact_number() == null) {
          stmt.bindNull(15);
        } else {
          stmt.bindString(15, value.getField_contact_number());
        }
        if (value.getField_country_export() == null) {
          stmt.bindNull(16);
        } else {
          stmt.bindString(16, value.getField_country_export());
        }
      }
    };
    this.__preparedStmtOfDeleteAll = new SharedSQLiteStatement(__db) {
      @Override
      public String createQuery() {
        final String _query = "DELETE FROM country_office_listing";
        return _query;
      }
    };
  }

  @Override
  public void insert(CountryOfficeSettingEntity countryOfficeSettingEntity) {
    __db.beginTransaction();
    try {
      __insertionAdapterOfCountryOfficeSettingEntity.insert(countryOfficeSettingEntity);
      __db.setTransactionSuccessful();
    } finally {
      __db.endTransaction();
    }
  }

  @Override
  public void deleteAll() {
    final SupportSQLiteStatement _stmt = __preparedStmtOfDeleteAll.acquire();
    __db.beginTransaction();
    try {
      _stmt.executeUpdateDelete();
      __db.setTransactionSuccessful();
    } finally {
      __db.endTransaction();
      __preparedStmtOfDeleteAll.release(_stmt);
    }
  }

  @Override
  public List<CountryOfficeSettingEntity> getAllContent() {
    final String _sql = "SELECT * from country_office_listing";
    final RoomSQLiteQuery _statement = RoomSQLiteQuery.acquire(_sql, 0);
    final Cursor _cursor = __db.query(_statement);
    try {
      final int _cursorIndexOfFieldCountry = _cursor.getColumnIndexOrThrow("field_country");
      final int _cursorIndexOfFieldClientCode = _cursor.getColumnIndexOrThrow("field_client_code");
      final int _cursorIndexOfFieldImage = _cursor.getColumnIndexOrThrow("field_image");
      final int _cursorIndexOfTitle = _cursor.getColumnIndexOrThrow("title");
      final int _cursorIndexOfFieldSubtitle = _cursor.getColumnIndexOrThrow("field_subtitle");
      final int _cursorIndexOfFieldEnableHealthManager = _cursor.getColumnIndexOrThrow("field_enable_health_manager");
      final int _cursorIndexOfFieldEnableLiveChat = _cursor.getColumnIndexOrThrow("field_enable_live_chat");
      final int _cursorIndexOfFieldEnableServiceLocator = _cursor.getColumnIndexOrThrow("field_enable_service_locator");
      final int _cursorIndexOfFieldSmsGetwayUrl = _cursor.getColumnIndexOrThrow("field_sms_getway_url");
      final int _cursorIndexOfFieldSmsUsername = _cursor.getColumnIndexOrThrow("field_sms_username");
      final int _cursorIndexOfFieldSmsAuth = _cursor.getColumnIndexOrThrow("field_sms_auth");
      final int _cursorIndexOfFieldMaximumDistance = _cursor.getColumnIndexOrThrow("field_maximum_distance");
      final int _cursorIndexOfFieldLanguage = _cursor.getColumnIndexOrThrow("field_language");
      final int _cursorIndexOfFieldHealthManagementExport = _cursor.getColumnIndexOrThrow("field_health_management_export");
      final int _cursorIndexOfFieldContactNumber = _cursor.getColumnIndexOrThrow("field_contact_number");
      final int _cursorIndexOfFieldCountryExport = _cursor.getColumnIndexOrThrow("field_country_export");
      final List<CountryOfficeSettingEntity> _result = new ArrayList<CountryOfficeSettingEntity>(_cursor.getCount());
      while(_cursor.moveToNext()) {
        final CountryOfficeSettingEntity _item;
        final String _tmpField_country;
        _tmpField_country = _cursor.getString(_cursorIndexOfFieldCountry);
        final String _tmpField_client_code;
        _tmpField_client_code = _cursor.getString(_cursorIndexOfFieldClientCode);
        final String _tmpField_image;
        _tmpField_image = _cursor.getString(_cursorIndexOfFieldImage);
        final String _tmpTitle;
        _tmpTitle = _cursor.getString(_cursorIndexOfTitle);
        final String _tmpField_subtitle;
        _tmpField_subtitle = _cursor.getString(_cursorIndexOfFieldSubtitle);
        final String _tmpField_enable_health_manager;
        _tmpField_enable_health_manager = _cursor.getString(_cursorIndexOfFieldEnableHealthManager);
        final String _tmpField_enable_live_chat;
        _tmpField_enable_live_chat = _cursor.getString(_cursorIndexOfFieldEnableLiveChat);
        final String _tmpField_enable_service_locator;
        _tmpField_enable_service_locator = _cursor.getString(_cursorIndexOfFieldEnableServiceLocator);
        final String _tmpField_sms_getway_url;
        _tmpField_sms_getway_url = _cursor.getString(_cursorIndexOfFieldSmsGetwayUrl);
        final String _tmpField_sms_username;
        _tmpField_sms_username = _cursor.getString(_cursorIndexOfFieldSmsUsername);
        final String _tmpField_sms_auth;
        _tmpField_sms_auth = _cursor.getString(_cursorIndexOfFieldSmsAuth);
        final String _tmpField_maximum_distance;
        _tmpField_maximum_distance = _cursor.getString(_cursorIndexOfFieldMaximumDistance);
        final String _tmpField_language;
        _tmpField_language = _cursor.getString(_cursorIndexOfFieldLanguage);
        final String _tmpField_health_management_export;
        _tmpField_health_management_export = _cursor.getString(_cursorIndexOfFieldHealthManagementExport);
        final String _tmpField_contact_number;
        _tmpField_contact_number = _cursor.getString(_cursorIndexOfFieldContactNumber);
        final String _tmpField_country_export;
        _tmpField_country_export = _cursor.getString(_cursorIndexOfFieldCountryExport);
        _item = new CountryOfficeSettingEntity(_tmpField_country,_tmpField_client_code,_tmpField_image,_tmpTitle,_tmpField_subtitle,_tmpField_enable_health_manager,_tmpField_enable_live_chat,_tmpField_enable_service_locator,_tmpField_sms_getway_url,_tmpField_sms_username,_tmpField_sms_auth,_tmpField_maximum_distance,_tmpField_language,_tmpField_health_management_export,_tmpField_contact_number,_tmpField_country_export);
        _result.add(_item);
      }
      return _result;
    } finally {
      _cursor.close();
      _statement.release();
    }
  }

  @Override
  public CountryOfficeSettingEntity getModuleVisibility(String CountryCode) {
    final String _sql = "SELECT * from country_office_listing WHERE field_country = ?";
    final RoomSQLiteQuery _statement = RoomSQLiteQuery.acquire(_sql, 1);
    int _argIndex = 1;
    if (CountryCode == null) {
      _statement.bindNull(_argIndex);
    } else {
      _statement.bindString(_argIndex, CountryCode);
    }
    final Cursor _cursor = __db.query(_statement);
    try {
      final int _cursorIndexOfFieldCountry = _cursor.getColumnIndexOrThrow("field_country");
      final int _cursorIndexOfFieldClientCode = _cursor.getColumnIndexOrThrow("field_client_code");
      final int _cursorIndexOfFieldImage = _cursor.getColumnIndexOrThrow("field_image");
      final int _cursorIndexOfTitle = _cursor.getColumnIndexOrThrow("title");
      final int _cursorIndexOfFieldSubtitle = _cursor.getColumnIndexOrThrow("field_subtitle");
      final int _cursorIndexOfFieldEnableHealthManager = _cursor.getColumnIndexOrThrow("field_enable_health_manager");
      final int _cursorIndexOfFieldEnableLiveChat = _cursor.getColumnIndexOrThrow("field_enable_live_chat");
      final int _cursorIndexOfFieldEnableServiceLocator = _cursor.getColumnIndexOrThrow("field_enable_service_locator");
      final int _cursorIndexOfFieldSmsGetwayUrl = _cursor.getColumnIndexOrThrow("field_sms_getway_url");
      final int _cursorIndexOfFieldSmsUsername = _cursor.getColumnIndexOrThrow("field_sms_username");
      final int _cursorIndexOfFieldSmsAuth = _cursor.getColumnIndexOrThrow("field_sms_auth");
      final int _cursorIndexOfFieldMaximumDistance = _cursor.getColumnIndexOrThrow("field_maximum_distance");
      final int _cursorIndexOfFieldLanguage = _cursor.getColumnIndexOrThrow("field_language");
      final int _cursorIndexOfFieldHealthManagementExport = _cursor.getColumnIndexOrThrow("field_health_management_export");
      final int _cursorIndexOfFieldContactNumber = _cursor.getColumnIndexOrThrow("field_contact_number");
      final int _cursorIndexOfFieldCountryExport = _cursor.getColumnIndexOrThrow("field_country_export");
      final CountryOfficeSettingEntity _result;
      if(_cursor.moveToFirst()) {
        final String _tmpField_country;
        _tmpField_country = _cursor.getString(_cursorIndexOfFieldCountry);
        final String _tmpField_client_code;
        _tmpField_client_code = _cursor.getString(_cursorIndexOfFieldClientCode);
        final String _tmpField_image;
        _tmpField_image = _cursor.getString(_cursorIndexOfFieldImage);
        final String _tmpTitle;
        _tmpTitle = _cursor.getString(_cursorIndexOfTitle);
        final String _tmpField_subtitle;
        _tmpField_subtitle = _cursor.getString(_cursorIndexOfFieldSubtitle);
        final String _tmpField_enable_health_manager;
        _tmpField_enable_health_manager = _cursor.getString(_cursorIndexOfFieldEnableHealthManager);
        final String _tmpField_enable_live_chat;
        _tmpField_enable_live_chat = _cursor.getString(_cursorIndexOfFieldEnableLiveChat);
        final String _tmpField_enable_service_locator;
        _tmpField_enable_service_locator = _cursor.getString(_cursorIndexOfFieldEnableServiceLocator);
        final String _tmpField_sms_getway_url;
        _tmpField_sms_getway_url = _cursor.getString(_cursorIndexOfFieldSmsGetwayUrl);
        final String _tmpField_sms_username;
        _tmpField_sms_username = _cursor.getString(_cursorIndexOfFieldSmsUsername);
        final String _tmpField_sms_auth;
        _tmpField_sms_auth = _cursor.getString(_cursorIndexOfFieldSmsAuth);
        final String _tmpField_maximum_distance;
        _tmpField_maximum_distance = _cursor.getString(_cursorIndexOfFieldMaximumDistance);
        final String _tmpField_language;
        _tmpField_language = _cursor.getString(_cursorIndexOfFieldLanguage);
        final String _tmpField_health_management_export;
        _tmpField_health_management_export = _cursor.getString(_cursorIndexOfFieldHealthManagementExport);
        final String _tmpField_contact_number;
        _tmpField_contact_number = _cursor.getString(_cursorIndexOfFieldContactNumber);
        final String _tmpField_country_export;
        _tmpField_country_export = _cursor.getString(_cursorIndexOfFieldCountryExport);
        _result = new CountryOfficeSettingEntity(_tmpField_country,_tmpField_client_code,_tmpField_image,_tmpTitle,_tmpField_subtitle,_tmpField_enable_health_manager,_tmpField_enable_live_chat,_tmpField_enable_service_locator,_tmpField_sms_getway_url,_tmpField_sms_username,_tmpField_sms_auth,_tmpField_maximum_distance,_tmpField_language,_tmpField_health_management_export,_tmpField_contact_number,_tmpField_country_export);
      } else {
        _result = null;
      }
      return _result;
    } finally {
      _cursor.close();
      _statement.release();
    }
  }
}
