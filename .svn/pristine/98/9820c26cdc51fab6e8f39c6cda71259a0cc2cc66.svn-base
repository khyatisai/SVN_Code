package com.unfpa.appsistenciamaternaunfpa.database.dao.my_knowledge;

import android.database.Cursor;
import androidx.room.EntityInsertionAdapter;
import androidx.room.RoomDatabase;
import androidx.room.RoomSQLiteQuery;
import androidx.sqlite.db.SupportSQLiteStatement;
import com.unfpa.appsistenciamaternaunfpa.database.entity.my_knowledge.QuizResponse;
import java.lang.Integer;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.ArrayList;
import java.util.List;

@SuppressWarnings("unchecked")
public final class QuizResponseDAO_Impl implements QuizResponseDAO {
  private final RoomDatabase __db;

  private final EntityInsertionAdapter __insertionAdapterOfQuizResponse;

  public QuizResponseDAO_Impl(RoomDatabase __db) {
    this.__db = __db;
    this.__insertionAdapterOfQuizResponse = new EntityInsertionAdapter<QuizResponse>(__db) {
      @Override
      public String createQuery() {
        return "INSERT OR IGNORE INTO `quiz_response`(`responseId`,`categoryId`,`quizId`,`jsonQuizResponse`,`statusSync`,`result`) VALUES (nullif(?, 0),?,?,?,?,?)";
      }

      @Override
      public void bind(SupportSQLiteStatement stmt, QuizResponse value) {
        stmt.bindLong(1, value.getResponseId());
        if (value.getCategoryId() == null) {
          stmt.bindNull(2);
        } else {
          stmt.bindString(2, value.getCategoryId());
        }
        if (value.getQuizId() == null) {
          stmt.bindNull(3);
        } else {
          stmt.bindString(3, value.getQuizId());
        }
        if (value.getJsonQuizResponse() == null) {
          stmt.bindNull(4);
        } else {
          stmt.bindString(4, value.getJsonQuizResponse());
        }
        if (value.getStatusSync() == null) {
          stmt.bindNull(5);
        } else {
          stmt.bindLong(5, value.getStatusSync());
        }
        if (value.getResult() == null) {
          stmt.bindNull(6);
        } else {
          stmt.bindLong(6, value.getResult());
        }
      }
    };
  }

  @Override
  public void insert(QuizResponse quizResponse) {
    __db.beginTransaction();
    try {
      __insertionAdapterOfQuizResponse.insert(quizResponse);
      __db.setTransactionSuccessful();
    } finally {
      __db.endTransaction();
    }
  }

  @Override
  public List<QuizResponse> getAllResponse(String quizId, String categoryId) {
    final String _sql = "SELECT * from quiz_response WHERE categoryId = ? AND quizId = ?";
    final RoomSQLiteQuery _statement = RoomSQLiteQuery.acquire(_sql, 2);
    int _argIndex = 1;
    if (categoryId == null) {
      _statement.bindNull(_argIndex);
    } else {
      _statement.bindString(_argIndex, categoryId);
    }
    _argIndex = 2;
    if (quizId == null) {
      _statement.bindNull(_argIndex);
    } else {
      _statement.bindString(_argIndex, quizId);
    }
    final Cursor _cursor = __db.query(_statement);
    try {
      final int _cursorIndexOfResponseId = _cursor.getColumnIndexOrThrow("responseId");
      final int _cursorIndexOfCategoryId = _cursor.getColumnIndexOrThrow("categoryId");
      final int _cursorIndexOfQuizId = _cursor.getColumnIndexOrThrow("quizId");
      final int _cursorIndexOfJsonQuizResponse = _cursor.getColumnIndexOrThrow("jsonQuizResponse");
      final int _cursorIndexOfStatusSync = _cursor.getColumnIndexOrThrow("statusSync");
      final int _cursorIndexOfResult = _cursor.getColumnIndexOrThrow("result");
      final List<QuizResponse> _result = new ArrayList<QuizResponse>(_cursor.getCount());
      while(_cursor.moveToNext()) {
        final QuizResponse _item;
        final String _tmpCategoryId;
        _tmpCategoryId = _cursor.getString(_cursorIndexOfCategoryId);
        final String _tmpQuizId;
        _tmpQuizId = _cursor.getString(_cursorIndexOfQuizId);
        final String _tmpJsonQuizResponse;
        _tmpJsonQuizResponse = _cursor.getString(_cursorIndexOfJsonQuizResponse);
        final Integer _tmpStatusSync;
        if (_cursor.isNull(_cursorIndexOfStatusSync)) {
          _tmpStatusSync = null;
        } else {
          _tmpStatusSync = _cursor.getInt(_cursorIndexOfStatusSync);
        }
        final Integer _tmpResult;
        if (_cursor.isNull(_cursorIndexOfResult)) {
          _tmpResult = null;
        } else {
          _tmpResult = _cursor.getInt(_cursorIndexOfResult);
        }
        _item = new QuizResponse(_tmpCategoryId,_tmpQuizId,_tmpJsonQuizResponse,_tmpStatusSync,_tmpResult);
        final int _tmpResponseId;
        _tmpResponseId = _cursor.getInt(_cursorIndexOfResponseId);
        _item.setResponseId(_tmpResponseId);
        _result.add(_item);
      }
      return _result;
    } finally {
      _cursor.close();
      _statement.release();
    }
  }
}
