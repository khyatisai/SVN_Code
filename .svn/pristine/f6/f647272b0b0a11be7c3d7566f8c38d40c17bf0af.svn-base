package com.unfpa.appsistenciamaternaunfpa.database.dao.my_knowledge;

import android.database.Cursor;
import androidx.room.EntityInsertionAdapter;
import androidx.room.RoomDatabase;
import androidx.room.RoomSQLiteQuery;
import androidx.room.SharedSQLiteStatement;
import androidx.sqlite.db.SupportSQLiteStatement;
import com.unfpa.appsistenciamaternaunfpa.database.entity.my_knowledge.SRHContent;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.ArrayList;
import java.util.List;

@SuppressWarnings("unchecked")
public final class SRHContentDAO_Impl implements SRHContentDAO {
  private final RoomDatabase __db;

  private final EntityInsertionAdapter __insertionAdapterOfSRHContent;

  private final SharedSQLiteStatement __preparedStmtOfDeleteAll;

  private final SharedSQLiteStatement __preparedStmtOfSetFavourite;

  public SRHContentDAO_Impl(RoomDatabase __db) {
    this.__db = __db;
    this.__insertionAdapterOfSRHContent = new EntityInsertionAdapter<SRHContent>(__db) {
      @Override
      public String createQuery() {
        return "INSERT OR IGNORE INTO `content_master`(`nid`,`title`,`field_image`,`field_cover_image`,`field_short_description`,`field_thematic_area`,`field_description`,`field_age_group`,`field_objective`,`field_tags`,`field_video`,`field_hot_srh_content`,`field_sms_text`,`isFavourite`,`field_thematic_area_id`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
      }

      @Override
      public void bind(SupportSQLiteStatement stmt, SRHContent value) {
        if (value.getNid() == null) {
          stmt.bindNull(1);
        } else {
          stmt.bindString(1, value.getNid());
        }
        if (value.getTitle() == null) {
          stmt.bindNull(2);
        } else {
          stmt.bindString(2, value.getTitle());
        }
        if (value.getField_image() == null) {
          stmt.bindNull(3);
        } else {
          stmt.bindString(3, value.getField_image());
        }
        if (value.getField_cover_image() == null) {
          stmt.bindNull(4);
        } else {
          stmt.bindString(4, value.getField_cover_image());
        }
        if (value.getField_short_description() == null) {
          stmt.bindNull(5);
        } else {
          stmt.bindString(5, value.getField_short_description());
        }
        if (value.getField_thematic_area() == null) {
          stmt.bindNull(6);
        } else {
          stmt.bindString(6, value.getField_thematic_area());
        }
        if (value.getField_description() == null) {
          stmt.bindNull(7);
        } else {
          stmt.bindString(7, value.getField_description());
        }
        if (value.getField_age_group() == null) {
          stmt.bindNull(8);
        } else {
          stmt.bindString(8, value.getField_age_group());
        }
        if (value.getField_objective() == null) {
          stmt.bindNull(9);
        } else {
          stmt.bindString(9, value.getField_objective());
        }
        if (value.getField_tags() == null) {
          stmt.bindNull(10);
        } else {
          stmt.bindString(10, value.getField_tags());
        }
        if (value.getField_video() == null) {
          stmt.bindNull(11);
        } else {
          stmt.bindString(11, value.getField_video());
        }
        if (value.getField_hot_srh_content() == null) {
          stmt.bindNull(12);
        } else {
          stmt.bindString(12, value.getField_hot_srh_content());
        }
        if (value.getField_sms_text() == null) {
          stmt.bindNull(13);
        } else {
          stmt.bindString(13, value.getField_sms_text());
        }
        final int _tmp;
        _tmp = value.isFavourite() ? 1 : 0;
        stmt.bindLong(14, _tmp);
        if (value.getField_thematic_area_id() == null) {
          stmt.bindNull(15);
        } else {
          stmt.bindString(15, value.getField_thematic_area_id());
        }
      }
    };
    this.__preparedStmtOfDeleteAll = new SharedSQLiteStatement(__db) {
      @Override
      public String createQuery() {
        final String _query = "DELETE FROM content_master";
        return _query;
      }
    };
    this.__preparedStmtOfSetFavourite = new SharedSQLiteStatement(__db) {
      @Override
      public String createQuery() {
        final String _query = "UPDATE content_master SET isFavourite = ? WHERE nid = ?";
        return _query;
      }
    };
  }

  @Override
  public void insert(SRHContent contentMaster) {
    __db.beginTransaction();
    try {
      __insertionAdapterOfSRHContent.insert(contentMaster);
      __db.setTransactionSuccessful();
    } finally {
      __db.endTransaction();
    }
  }

  @Override
  public void deleteAll() {
    final SupportSQLiteStatement _stmt = __preparedStmtOfDeleteAll.acquire();
    __db.beginTransaction();
    try {
      _stmt.executeUpdateDelete();
      __db.setTransactionSuccessful();
    } finally {
      __db.endTransaction();
      __preparedStmtOfDeleteAll.release(_stmt);
    }
  }

  @Override
  public void setFavourite(String nid, boolean isFavourite) {
    final SupportSQLiteStatement _stmt = __preparedStmtOfSetFavourite.acquire();
    __db.beginTransaction();
    try {
      int _argIndex = 1;
      final int _tmp;
      _tmp = isFavourite ? 1 : 0;
      _stmt.bindLong(_argIndex, _tmp);
      _argIndex = 2;
      if (nid == null) {
        _stmt.bindNull(_argIndex);
      } else {
        _stmt.bindString(_argIndex, nid);
      }
      _stmt.executeUpdateDelete();
      __db.setTransactionSuccessful();
    } finally {
      __db.endTransaction();
      __preparedStmtOfSetFavourite.release(_stmt);
    }
  }

  @Override
  public List<SRHContent> getAllContent() {
    final String _sql = "SELECT * from content_master";
    final RoomSQLiteQuery _statement = RoomSQLiteQuery.acquire(_sql, 0);
    final Cursor _cursor = __db.query(_statement);
    try {
      final int _cursorIndexOfNid = _cursor.getColumnIndexOrThrow("nid");
      final int _cursorIndexOfTitle = _cursor.getColumnIndexOrThrow("title");
      final int _cursorIndexOfFieldImage = _cursor.getColumnIndexOrThrow("field_image");
      final int _cursorIndexOfFieldCoverImage = _cursor.getColumnIndexOrThrow("field_cover_image");
      final int _cursorIndexOfFieldShortDescription = _cursor.getColumnIndexOrThrow("field_short_description");
      final int _cursorIndexOfFieldThematicArea = _cursor.getColumnIndexOrThrow("field_thematic_area");
      final int _cursorIndexOfFieldDescription = _cursor.getColumnIndexOrThrow("field_description");
      final int _cursorIndexOfFieldAgeGroup = _cursor.getColumnIndexOrThrow("field_age_group");
      final int _cursorIndexOfFieldObjective = _cursor.getColumnIndexOrThrow("field_objective");
      final int _cursorIndexOfFieldTags = _cursor.getColumnIndexOrThrow("field_tags");
      final int _cursorIndexOfFieldVideo = _cursor.getColumnIndexOrThrow("field_video");
      final int _cursorIndexOfFieldHotSrhContent = _cursor.getColumnIndexOrThrow("field_hot_srh_content");
      final int _cursorIndexOfFieldSmsText = _cursor.getColumnIndexOrThrow("field_sms_text");
      final int _cursorIndexOfIsFavourite = _cursor.getColumnIndexOrThrow("isFavourite");
      final int _cursorIndexOfFieldThematicAreaId = _cursor.getColumnIndexOrThrow("field_thematic_area_id");
      final List<SRHContent> _result = new ArrayList<SRHContent>(_cursor.getCount());
      while(_cursor.moveToNext()) {
        final SRHContent _item;
        final String _tmpNid;
        _tmpNid = _cursor.getString(_cursorIndexOfNid);
        final String _tmpTitle;
        _tmpTitle = _cursor.getString(_cursorIndexOfTitle);
        final String _tmpField_image;
        _tmpField_image = _cursor.getString(_cursorIndexOfFieldImage);
        final String _tmpField_cover_image;
        _tmpField_cover_image = _cursor.getString(_cursorIndexOfFieldCoverImage);
        final String _tmpField_short_description;
        _tmpField_short_description = _cursor.getString(_cursorIndexOfFieldShortDescription);
        final String _tmpField_thematic_area;
        _tmpField_thematic_area = _cursor.getString(_cursorIndexOfFieldThematicArea);
        final String _tmpField_description;
        _tmpField_description = _cursor.getString(_cursorIndexOfFieldDescription);
        final String _tmpField_age_group;
        _tmpField_age_group = _cursor.getString(_cursorIndexOfFieldAgeGroup);
        final String _tmpField_objective;
        _tmpField_objective = _cursor.getString(_cursorIndexOfFieldObjective);
        final String _tmpField_tags;
        _tmpField_tags = _cursor.getString(_cursorIndexOfFieldTags);
        final String _tmpField_video;
        _tmpField_video = _cursor.getString(_cursorIndexOfFieldVideo);
        final String _tmpField_hot_srh_content;
        _tmpField_hot_srh_content = _cursor.getString(_cursorIndexOfFieldHotSrhContent);
        final String _tmpField_sms_text;
        _tmpField_sms_text = _cursor.getString(_cursorIndexOfFieldSmsText);
        final boolean _tmpIsFavourite;
        final int _tmp;
        _tmp = _cursor.getInt(_cursorIndexOfIsFavourite);
        _tmpIsFavourite = _tmp != 0;
        final String _tmpField_thematic_area_id;
        _tmpField_thematic_area_id = _cursor.getString(_cursorIndexOfFieldThematicAreaId);
        _item = new SRHContent(_tmpNid,_tmpTitle,_tmpField_image,_tmpField_cover_image,_tmpField_short_description,_tmpField_thematic_area,_tmpField_description,_tmpField_age_group,_tmpField_objective,_tmpField_tags,_tmpField_video,_tmpField_hot_srh_content,_tmpField_sms_text,_tmpIsFavourite,_tmpField_thematic_area_id);
        _result.add(_item);
      }
      return _result;
    } finally {
      _cursor.close();
      _statement.release();
    }
  }

  @Override
  public SRHContent getContentById(String contentId) {
    final String _sql = "SELECT * from content_master WHERE nid = ?";
    final RoomSQLiteQuery _statement = RoomSQLiteQuery.acquire(_sql, 1);
    int _argIndex = 1;
    if (contentId == null) {
      _statement.bindNull(_argIndex);
    } else {
      _statement.bindString(_argIndex, contentId);
    }
    final Cursor _cursor = __db.query(_statement);
    try {
      final int _cursorIndexOfNid = _cursor.getColumnIndexOrThrow("nid");
      final int _cursorIndexOfTitle = _cursor.getColumnIndexOrThrow("title");
      final int _cursorIndexOfFieldImage = _cursor.getColumnIndexOrThrow("field_image");
      final int _cursorIndexOfFieldCoverImage = _cursor.getColumnIndexOrThrow("field_cover_image");
      final int _cursorIndexOfFieldShortDescription = _cursor.getColumnIndexOrThrow("field_short_description");
      final int _cursorIndexOfFieldThematicArea = _cursor.getColumnIndexOrThrow("field_thematic_area");
      final int _cursorIndexOfFieldDescription = _cursor.getColumnIndexOrThrow("field_description");
      final int _cursorIndexOfFieldAgeGroup = _cursor.getColumnIndexOrThrow("field_age_group");
      final int _cursorIndexOfFieldObjective = _cursor.getColumnIndexOrThrow("field_objective");
      final int _cursorIndexOfFieldTags = _cursor.getColumnIndexOrThrow("field_tags");
      final int _cursorIndexOfFieldVideo = _cursor.getColumnIndexOrThrow("field_video");
      final int _cursorIndexOfFieldHotSrhContent = _cursor.getColumnIndexOrThrow("field_hot_srh_content");
      final int _cursorIndexOfFieldSmsText = _cursor.getColumnIndexOrThrow("field_sms_text");
      final int _cursorIndexOfIsFavourite = _cursor.getColumnIndexOrThrow("isFavourite");
      final int _cursorIndexOfFieldThematicAreaId = _cursor.getColumnIndexOrThrow("field_thematic_area_id");
      final SRHContent _result;
      if(_cursor.moveToFirst()) {
        final String _tmpNid;
        _tmpNid = _cursor.getString(_cursorIndexOfNid);
        final String _tmpTitle;
        _tmpTitle = _cursor.getString(_cursorIndexOfTitle);
        final String _tmpField_image;
        _tmpField_image = _cursor.getString(_cursorIndexOfFieldImage);
        final String _tmpField_cover_image;
        _tmpField_cover_image = _cursor.getString(_cursorIndexOfFieldCoverImage);
        final String _tmpField_short_description;
        _tmpField_short_description = _cursor.getString(_cursorIndexOfFieldShortDescription);
        final String _tmpField_thematic_area;
        _tmpField_thematic_area = _cursor.getString(_cursorIndexOfFieldThematicArea);
        final String _tmpField_description;
        _tmpField_description = _cursor.getString(_cursorIndexOfFieldDescription);
        final String _tmpField_age_group;
        _tmpField_age_group = _cursor.getString(_cursorIndexOfFieldAgeGroup);
        final String _tmpField_objective;
        _tmpField_objective = _cursor.getString(_cursorIndexOfFieldObjective);
        final String _tmpField_tags;
        _tmpField_tags = _cursor.getString(_cursorIndexOfFieldTags);
        final String _tmpField_video;
        _tmpField_video = _cursor.getString(_cursorIndexOfFieldVideo);
        final String _tmpField_hot_srh_content;
        _tmpField_hot_srh_content = _cursor.getString(_cursorIndexOfFieldHotSrhContent);
        final String _tmpField_sms_text;
        _tmpField_sms_text = _cursor.getString(_cursorIndexOfFieldSmsText);
        final boolean _tmpIsFavourite;
        final int _tmp;
        _tmp = _cursor.getInt(_cursorIndexOfIsFavourite);
        _tmpIsFavourite = _tmp != 0;
        final String _tmpField_thematic_area_id;
        _tmpField_thematic_area_id = _cursor.getString(_cursorIndexOfFieldThematicAreaId);
        _result = new SRHContent(_tmpNid,_tmpTitle,_tmpField_image,_tmpField_cover_image,_tmpField_short_description,_tmpField_thematic_area,_tmpField_description,_tmpField_age_group,_tmpField_objective,_tmpField_tags,_tmpField_video,_tmpField_hot_srh_content,_tmpField_sms_text,_tmpIsFavourite,_tmpField_thematic_area_id);
      } else {
        _result = null;
      }
      return _result;
    } finally {
      _cursor.close();
      _statement.release();
    }
  }

  @Override
  public List<SRHContent> getContentCategoryWise(String categoryId) {
    final String _sql = "SELECT * from content_master WHERE field_thematic_area_id = ? AND field_hot_srh_content = 'No'";
    final RoomSQLiteQuery _statement = RoomSQLiteQuery.acquire(_sql, 1);
    int _argIndex = 1;
    if (categoryId == null) {
      _statement.bindNull(_argIndex);
    } else {
      _statement.bindString(_argIndex, categoryId);
    }
    final Cursor _cursor = __db.query(_statement);
    try {
      final int _cursorIndexOfNid = _cursor.getColumnIndexOrThrow("nid");
      final int _cursorIndexOfTitle = _cursor.getColumnIndexOrThrow("title");
      final int _cursorIndexOfFieldImage = _cursor.getColumnIndexOrThrow("field_image");
      final int _cursorIndexOfFieldCoverImage = _cursor.getColumnIndexOrThrow("field_cover_image");
      final int _cursorIndexOfFieldShortDescription = _cursor.getColumnIndexOrThrow("field_short_description");
      final int _cursorIndexOfFieldThematicArea = _cursor.getColumnIndexOrThrow("field_thematic_area");
      final int _cursorIndexOfFieldDescription = _cursor.getColumnIndexOrThrow("field_description");
      final int _cursorIndexOfFieldAgeGroup = _cursor.getColumnIndexOrThrow("field_age_group");
      final int _cursorIndexOfFieldObjective = _cursor.getColumnIndexOrThrow("field_objective");
      final int _cursorIndexOfFieldTags = _cursor.getColumnIndexOrThrow("field_tags");
      final int _cursorIndexOfFieldVideo = _cursor.getColumnIndexOrThrow("field_video");
      final int _cursorIndexOfFieldHotSrhContent = _cursor.getColumnIndexOrThrow("field_hot_srh_content");
      final int _cursorIndexOfFieldSmsText = _cursor.getColumnIndexOrThrow("field_sms_text");
      final int _cursorIndexOfIsFavourite = _cursor.getColumnIndexOrThrow("isFavourite");
      final int _cursorIndexOfFieldThematicAreaId = _cursor.getColumnIndexOrThrow("field_thematic_area_id");
      final List<SRHContent> _result = new ArrayList<SRHContent>(_cursor.getCount());
      while(_cursor.moveToNext()) {
        final SRHContent _item;
        final String _tmpNid;
        _tmpNid = _cursor.getString(_cursorIndexOfNid);
        final String _tmpTitle;
        _tmpTitle = _cursor.getString(_cursorIndexOfTitle);
        final String _tmpField_image;
        _tmpField_image = _cursor.getString(_cursorIndexOfFieldImage);
        final String _tmpField_cover_image;
        _tmpField_cover_image = _cursor.getString(_cursorIndexOfFieldCoverImage);
        final String _tmpField_short_description;
        _tmpField_short_description = _cursor.getString(_cursorIndexOfFieldShortDescription);
        final String _tmpField_thematic_area;
        _tmpField_thematic_area = _cursor.getString(_cursorIndexOfFieldThematicArea);
        final String _tmpField_description;
        _tmpField_description = _cursor.getString(_cursorIndexOfFieldDescription);
        final String _tmpField_age_group;
        _tmpField_age_group = _cursor.getString(_cursorIndexOfFieldAgeGroup);
        final String _tmpField_objective;
        _tmpField_objective = _cursor.getString(_cursorIndexOfFieldObjective);
        final String _tmpField_tags;
        _tmpField_tags = _cursor.getString(_cursorIndexOfFieldTags);
        final String _tmpField_video;
        _tmpField_video = _cursor.getString(_cursorIndexOfFieldVideo);
        final String _tmpField_hot_srh_content;
        _tmpField_hot_srh_content = _cursor.getString(_cursorIndexOfFieldHotSrhContent);
        final String _tmpField_sms_text;
        _tmpField_sms_text = _cursor.getString(_cursorIndexOfFieldSmsText);
        final boolean _tmpIsFavourite;
        final int _tmp;
        _tmp = _cursor.getInt(_cursorIndexOfIsFavourite);
        _tmpIsFavourite = _tmp != 0;
        final String _tmpField_thematic_area_id;
        _tmpField_thematic_area_id = _cursor.getString(_cursorIndexOfFieldThematicAreaId);
        _item = new SRHContent(_tmpNid,_tmpTitle,_tmpField_image,_tmpField_cover_image,_tmpField_short_description,_tmpField_thematic_area,_tmpField_description,_tmpField_age_group,_tmpField_objective,_tmpField_tags,_tmpField_video,_tmpField_hot_srh_content,_tmpField_sms_text,_tmpIsFavourite,_tmpField_thematic_area_id);
        _result.add(_item);
      }
      return _result;
    } finally {
      _cursor.close();
      _statement.release();
    }
  }

  @Override
  public List<SRHContent> getContentByHotTopics() {
    final String _sql = "SELECT * from content_master WHERE field_hot_srh_content = 'Yes'";
    final RoomSQLiteQuery _statement = RoomSQLiteQuery.acquire(_sql, 0);
    final Cursor _cursor = __db.query(_statement);
    try {
      final int _cursorIndexOfNid = _cursor.getColumnIndexOrThrow("nid");
      final int _cursorIndexOfTitle = _cursor.getColumnIndexOrThrow("title");
      final int _cursorIndexOfFieldImage = _cursor.getColumnIndexOrThrow("field_image");
      final int _cursorIndexOfFieldCoverImage = _cursor.getColumnIndexOrThrow("field_cover_image");
      final int _cursorIndexOfFieldShortDescription = _cursor.getColumnIndexOrThrow("field_short_description");
      final int _cursorIndexOfFieldThematicArea = _cursor.getColumnIndexOrThrow("field_thematic_area");
      final int _cursorIndexOfFieldDescription = _cursor.getColumnIndexOrThrow("field_description");
      final int _cursorIndexOfFieldAgeGroup = _cursor.getColumnIndexOrThrow("field_age_group");
      final int _cursorIndexOfFieldObjective = _cursor.getColumnIndexOrThrow("field_objective");
      final int _cursorIndexOfFieldTags = _cursor.getColumnIndexOrThrow("field_tags");
      final int _cursorIndexOfFieldVideo = _cursor.getColumnIndexOrThrow("field_video");
      final int _cursorIndexOfFieldHotSrhContent = _cursor.getColumnIndexOrThrow("field_hot_srh_content");
      final int _cursorIndexOfFieldSmsText = _cursor.getColumnIndexOrThrow("field_sms_text");
      final int _cursorIndexOfIsFavourite = _cursor.getColumnIndexOrThrow("isFavourite");
      final int _cursorIndexOfFieldThematicAreaId = _cursor.getColumnIndexOrThrow("field_thematic_area_id");
      final List<SRHContent> _result = new ArrayList<SRHContent>(_cursor.getCount());
      while(_cursor.moveToNext()) {
        final SRHContent _item;
        final String _tmpNid;
        _tmpNid = _cursor.getString(_cursorIndexOfNid);
        final String _tmpTitle;
        _tmpTitle = _cursor.getString(_cursorIndexOfTitle);
        final String _tmpField_image;
        _tmpField_image = _cursor.getString(_cursorIndexOfFieldImage);
        final String _tmpField_cover_image;
        _tmpField_cover_image = _cursor.getString(_cursorIndexOfFieldCoverImage);
        final String _tmpField_short_description;
        _tmpField_short_description = _cursor.getString(_cursorIndexOfFieldShortDescription);
        final String _tmpField_thematic_area;
        _tmpField_thematic_area = _cursor.getString(_cursorIndexOfFieldThematicArea);
        final String _tmpField_description;
        _tmpField_description = _cursor.getString(_cursorIndexOfFieldDescription);
        final String _tmpField_age_group;
        _tmpField_age_group = _cursor.getString(_cursorIndexOfFieldAgeGroup);
        final String _tmpField_objective;
        _tmpField_objective = _cursor.getString(_cursorIndexOfFieldObjective);
        final String _tmpField_tags;
        _tmpField_tags = _cursor.getString(_cursorIndexOfFieldTags);
        final String _tmpField_video;
        _tmpField_video = _cursor.getString(_cursorIndexOfFieldVideo);
        final String _tmpField_hot_srh_content;
        _tmpField_hot_srh_content = _cursor.getString(_cursorIndexOfFieldHotSrhContent);
        final String _tmpField_sms_text;
        _tmpField_sms_text = _cursor.getString(_cursorIndexOfFieldSmsText);
        final boolean _tmpIsFavourite;
        final int _tmp;
        _tmp = _cursor.getInt(_cursorIndexOfIsFavourite);
        _tmpIsFavourite = _tmp != 0;
        final String _tmpField_thematic_area_id;
        _tmpField_thematic_area_id = _cursor.getString(_cursorIndexOfFieldThematicAreaId);
        _item = new SRHContent(_tmpNid,_tmpTitle,_tmpField_image,_tmpField_cover_image,_tmpField_short_description,_tmpField_thematic_area,_tmpField_description,_tmpField_age_group,_tmpField_objective,_tmpField_tags,_tmpField_video,_tmpField_hot_srh_content,_tmpField_sms_text,_tmpIsFavourite,_tmpField_thematic_area_id);
        _result.add(_item);
      }
      return _result;
    } finally {
      _cursor.close();
      _statement.release();
    }
  }

  @Override
  public List<SRHContent> getContentListSearch(String categoryName, String strSearch) {
    final String _sql = "SELECT * from content_master WHERE field_thematic_area = ? AND (title LIKE '%' || ? || '%' OR  field_short_description LIKE '%' || ? || '%')";
    final RoomSQLiteQuery _statement = RoomSQLiteQuery.acquire(_sql, 3);
    int _argIndex = 1;
    if (categoryName == null) {
      _statement.bindNull(_argIndex);
    } else {
      _statement.bindString(_argIndex, categoryName);
    }
    _argIndex = 2;
    if (strSearch == null) {
      _statement.bindNull(_argIndex);
    } else {
      _statement.bindString(_argIndex, strSearch);
    }
    _argIndex = 3;
    if (strSearch == null) {
      _statement.bindNull(_argIndex);
    } else {
      _statement.bindString(_argIndex, strSearch);
    }
    final Cursor _cursor = __db.query(_statement);
    try {
      final int _cursorIndexOfNid = _cursor.getColumnIndexOrThrow("nid");
      final int _cursorIndexOfTitle = _cursor.getColumnIndexOrThrow("title");
      final int _cursorIndexOfFieldImage = _cursor.getColumnIndexOrThrow("field_image");
      final int _cursorIndexOfFieldCoverImage = _cursor.getColumnIndexOrThrow("field_cover_image");
      final int _cursorIndexOfFieldShortDescription = _cursor.getColumnIndexOrThrow("field_short_description");
      final int _cursorIndexOfFieldThematicArea = _cursor.getColumnIndexOrThrow("field_thematic_area");
      final int _cursorIndexOfFieldDescription = _cursor.getColumnIndexOrThrow("field_description");
      final int _cursorIndexOfFieldAgeGroup = _cursor.getColumnIndexOrThrow("field_age_group");
      final int _cursorIndexOfFieldObjective = _cursor.getColumnIndexOrThrow("field_objective");
      final int _cursorIndexOfFieldTags = _cursor.getColumnIndexOrThrow("field_tags");
      final int _cursorIndexOfFieldVideo = _cursor.getColumnIndexOrThrow("field_video");
      final int _cursorIndexOfFieldHotSrhContent = _cursor.getColumnIndexOrThrow("field_hot_srh_content");
      final int _cursorIndexOfFieldSmsText = _cursor.getColumnIndexOrThrow("field_sms_text");
      final int _cursorIndexOfIsFavourite = _cursor.getColumnIndexOrThrow("isFavourite");
      final int _cursorIndexOfFieldThematicAreaId = _cursor.getColumnIndexOrThrow("field_thematic_area_id");
      final List<SRHContent> _result = new ArrayList<SRHContent>(_cursor.getCount());
      while(_cursor.moveToNext()) {
        final SRHContent _item;
        final String _tmpNid;
        _tmpNid = _cursor.getString(_cursorIndexOfNid);
        final String _tmpTitle;
        _tmpTitle = _cursor.getString(_cursorIndexOfTitle);
        final String _tmpField_image;
        _tmpField_image = _cursor.getString(_cursorIndexOfFieldImage);
        final String _tmpField_cover_image;
        _tmpField_cover_image = _cursor.getString(_cursorIndexOfFieldCoverImage);
        final String _tmpField_short_description;
        _tmpField_short_description = _cursor.getString(_cursorIndexOfFieldShortDescription);
        final String _tmpField_thematic_area;
        _tmpField_thematic_area = _cursor.getString(_cursorIndexOfFieldThematicArea);
        final String _tmpField_description;
        _tmpField_description = _cursor.getString(_cursorIndexOfFieldDescription);
        final String _tmpField_age_group;
        _tmpField_age_group = _cursor.getString(_cursorIndexOfFieldAgeGroup);
        final String _tmpField_objective;
        _tmpField_objective = _cursor.getString(_cursorIndexOfFieldObjective);
        final String _tmpField_tags;
        _tmpField_tags = _cursor.getString(_cursorIndexOfFieldTags);
        final String _tmpField_video;
        _tmpField_video = _cursor.getString(_cursorIndexOfFieldVideo);
        final String _tmpField_hot_srh_content;
        _tmpField_hot_srh_content = _cursor.getString(_cursorIndexOfFieldHotSrhContent);
        final String _tmpField_sms_text;
        _tmpField_sms_text = _cursor.getString(_cursorIndexOfFieldSmsText);
        final boolean _tmpIsFavourite;
        final int _tmp;
        _tmp = _cursor.getInt(_cursorIndexOfIsFavourite);
        _tmpIsFavourite = _tmp != 0;
        final String _tmpField_thematic_area_id;
        _tmpField_thematic_area_id = _cursor.getString(_cursorIndexOfFieldThematicAreaId);
        _item = new SRHContent(_tmpNid,_tmpTitle,_tmpField_image,_tmpField_cover_image,_tmpField_short_description,_tmpField_thematic_area,_tmpField_description,_tmpField_age_group,_tmpField_objective,_tmpField_tags,_tmpField_video,_tmpField_hot_srh_content,_tmpField_sms_text,_tmpIsFavourite,_tmpField_thematic_area_id);
        _result.add(_item);
      }
      return _result;
    } finally {
      _cursor.close();
      _statement.release();
    }
  }

  @Override
  public List<SRHContent> getContentListSearchAll(String strSearch) {
    final String _sql = "SELECT * from content_master WHERE  (title LIKE '%' || ? || '%' OR  field_short_description LIKE '%' || ? || '%')";
    final RoomSQLiteQuery _statement = RoomSQLiteQuery.acquire(_sql, 2);
    int _argIndex = 1;
    if (strSearch == null) {
      _statement.bindNull(_argIndex);
    } else {
      _statement.bindString(_argIndex, strSearch);
    }
    _argIndex = 2;
    if (strSearch == null) {
      _statement.bindNull(_argIndex);
    } else {
      _statement.bindString(_argIndex, strSearch);
    }
    final Cursor _cursor = __db.query(_statement);
    try {
      final int _cursorIndexOfNid = _cursor.getColumnIndexOrThrow("nid");
      final int _cursorIndexOfTitle = _cursor.getColumnIndexOrThrow("title");
      final int _cursorIndexOfFieldImage = _cursor.getColumnIndexOrThrow("field_image");
      final int _cursorIndexOfFieldCoverImage = _cursor.getColumnIndexOrThrow("field_cover_image");
      final int _cursorIndexOfFieldShortDescription = _cursor.getColumnIndexOrThrow("field_short_description");
      final int _cursorIndexOfFieldThematicArea = _cursor.getColumnIndexOrThrow("field_thematic_area");
      final int _cursorIndexOfFieldDescription = _cursor.getColumnIndexOrThrow("field_description");
      final int _cursorIndexOfFieldAgeGroup = _cursor.getColumnIndexOrThrow("field_age_group");
      final int _cursorIndexOfFieldObjective = _cursor.getColumnIndexOrThrow("field_objective");
      final int _cursorIndexOfFieldTags = _cursor.getColumnIndexOrThrow("field_tags");
      final int _cursorIndexOfFieldVideo = _cursor.getColumnIndexOrThrow("field_video");
      final int _cursorIndexOfFieldHotSrhContent = _cursor.getColumnIndexOrThrow("field_hot_srh_content");
      final int _cursorIndexOfFieldSmsText = _cursor.getColumnIndexOrThrow("field_sms_text");
      final int _cursorIndexOfIsFavourite = _cursor.getColumnIndexOrThrow("isFavourite");
      final int _cursorIndexOfFieldThematicAreaId = _cursor.getColumnIndexOrThrow("field_thematic_area_id");
      final List<SRHContent> _result = new ArrayList<SRHContent>(_cursor.getCount());
      while(_cursor.moveToNext()) {
        final SRHContent _item;
        final String _tmpNid;
        _tmpNid = _cursor.getString(_cursorIndexOfNid);
        final String _tmpTitle;
        _tmpTitle = _cursor.getString(_cursorIndexOfTitle);
        final String _tmpField_image;
        _tmpField_image = _cursor.getString(_cursorIndexOfFieldImage);
        final String _tmpField_cover_image;
        _tmpField_cover_image = _cursor.getString(_cursorIndexOfFieldCoverImage);
        final String _tmpField_short_description;
        _tmpField_short_description = _cursor.getString(_cursorIndexOfFieldShortDescription);
        final String _tmpField_thematic_area;
        _tmpField_thematic_area = _cursor.getString(_cursorIndexOfFieldThematicArea);
        final String _tmpField_description;
        _tmpField_description = _cursor.getString(_cursorIndexOfFieldDescription);
        final String _tmpField_age_group;
        _tmpField_age_group = _cursor.getString(_cursorIndexOfFieldAgeGroup);
        final String _tmpField_objective;
        _tmpField_objective = _cursor.getString(_cursorIndexOfFieldObjective);
        final String _tmpField_tags;
        _tmpField_tags = _cursor.getString(_cursorIndexOfFieldTags);
        final String _tmpField_video;
        _tmpField_video = _cursor.getString(_cursorIndexOfFieldVideo);
        final String _tmpField_hot_srh_content;
        _tmpField_hot_srh_content = _cursor.getString(_cursorIndexOfFieldHotSrhContent);
        final String _tmpField_sms_text;
        _tmpField_sms_text = _cursor.getString(_cursorIndexOfFieldSmsText);
        final boolean _tmpIsFavourite;
        final int _tmp;
        _tmp = _cursor.getInt(_cursorIndexOfIsFavourite);
        _tmpIsFavourite = _tmp != 0;
        final String _tmpField_thematic_area_id;
        _tmpField_thematic_area_id = _cursor.getString(_cursorIndexOfFieldThematicAreaId);
        _item = new SRHContent(_tmpNid,_tmpTitle,_tmpField_image,_tmpField_cover_image,_tmpField_short_description,_tmpField_thematic_area,_tmpField_description,_tmpField_age_group,_tmpField_objective,_tmpField_tags,_tmpField_video,_tmpField_hot_srh_content,_tmpField_sms_text,_tmpIsFavourite,_tmpField_thematic_area_id);
        _result.add(_item);
      }
      return _result;
    } finally {
      _cursor.close();
      _statement.release();
    }
  }

  @Override
  public List<SRHContent> getFavourite() {
    final String _sql = "SELECT * from content_master WHERE isFavourite = 1";
    final RoomSQLiteQuery _statement = RoomSQLiteQuery.acquire(_sql, 0);
    final Cursor _cursor = __db.query(_statement);
    try {
      final int _cursorIndexOfNid = _cursor.getColumnIndexOrThrow("nid");
      final int _cursorIndexOfTitle = _cursor.getColumnIndexOrThrow("title");
      final int _cursorIndexOfFieldImage = _cursor.getColumnIndexOrThrow("field_image");
      final int _cursorIndexOfFieldCoverImage = _cursor.getColumnIndexOrThrow("field_cover_image");
      final int _cursorIndexOfFieldShortDescription = _cursor.getColumnIndexOrThrow("field_short_description");
      final int _cursorIndexOfFieldThematicArea = _cursor.getColumnIndexOrThrow("field_thematic_area");
      final int _cursorIndexOfFieldDescription = _cursor.getColumnIndexOrThrow("field_description");
      final int _cursorIndexOfFieldAgeGroup = _cursor.getColumnIndexOrThrow("field_age_group");
      final int _cursorIndexOfFieldObjective = _cursor.getColumnIndexOrThrow("field_objective");
      final int _cursorIndexOfFieldTags = _cursor.getColumnIndexOrThrow("field_tags");
      final int _cursorIndexOfFieldVideo = _cursor.getColumnIndexOrThrow("field_video");
      final int _cursorIndexOfFieldHotSrhContent = _cursor.getColumnIndexOrThrow("field_hot_srh_content");
      final int _cursorIndexOfFieldSmsText = _cursor.getColumnIndexOrThrow("field_sms_text");
      final int _cursorIndexOfIsFavourite = _cursor.getColumnIndexOrThrow("isFavourite");
      final int _cursorIndexOfFieldThematicAreaId = _cursor.getColumnIndexOrThrow("field_thematic_area_id");
      final List<SRHContent> _result = new ArrayList<SRHContent>(_cursor.getCount());
      while(_cursor.moveToNext()) {
        final SRHContent _item;
        final String _tmpNid;
        _tmpNid = _cursor.getString(_cursorIndexOfNid);
        final String _tmpTitle;
        _tmpTitle = _cursor.getString(_cursorIndexOfTitle);
        final String _tmpField_image;
        _tmpField_image = _cursor.getString(_cursorIndexOfFieldImage);
        final String _tmpField_cover_image;
        _tmpField_cover_image = _cursor.getString(_cursorIndexOfFieldCoverImage);
        final String _tmpField_short_description;
        _tmpField_short_description = _cursor.getString(_cursorIndexOfFieldShortDescription);
        final String _tmpField_thematic_area;
        _tmpField_thematic_area = _cursor.getString(_cursorIndexOfFieldThematicArea);
        final String _tmpField_description;
        _tmpField_description = _cursor.getString(_cursorIndexOfFieldDescription);
        final String _tmpField_age_group;
        _tmpField_age_group = _cursor.getString(_cursorIndexOfFieldAgeGroup);
        final String _tmpField_objective;
        _tmpField_objective = _cursor.getString(_cursorIndexOfFieldObjective);
        final String _tmpField_tags;
        _tmpField_tags = _cursor.getString(_cursorIndexOfFieldTags);
        final String _tmpField_video;
        _tmpField_video = _cursor.getString(_cursorIndexOfFieldVideo);
        final String _tmpField_hot_srh_content;
        _tmpField_hot_srh_content = _cursor.getString(_cursorIndexOfFieldHotSrhContent);
        final String _tmpField_sms_text;
        _tmpField_sms_text = _cursor.getString(_cursorIndexOfFieldSmsText);
        final boolean _tmpIsFavourite;
        final int _tmp;
        _tmp = _cursor.getInt(_cursorIndexOfIsFavourite);
        _tmpIsFavourite = _tmp != 0;
        final String _tmpField_thematic_area_id;
        _tmpField_thematic_area_id = _cursor.getString(_cursorIndexOfFieldThematicAreaId);
        _item = new SRHContent(_tmpNid,_tmpTitle,_tmpField_image,_tmpField_cover_image,_tmpField_short_description,_tmpField_thematic_area,_tmpField_description,_tmpField_age_group,_tmpField_objective,_tmpField_tags,_tmpField_video,_tmpField_hot_srh_content,_tmpField_sms_text,_tmpIsFavourite,_tmpField_thematic_area_id);
        _result.add(_item);
      }
      return _result;
    } finally {
      _cursor.close();
      _statement.release();
    }
  }

  @Override
  public List<SRHContent> getFavouriteSearched(String strSearch) {
    final String _sql = "SELECT * from content_master WHERE isFavourite = 1 AND (title LIKE '%' || ? || '%' OR  field_short_description LIKE '%' || ? || '%')";
    final RoomSQLiteQuery _statement = RoomSQLiteQuery.acquire(_sql, 2);
    int _argIndex = 1;
    if (strSearch == null) {
      _statement.bindNull(_argIndex);
    } else {
      _statement.bindString(_argIndex, strSearch);
    }
    _argIndex = 2;
    if (strSearch == null) {
      _statement.bindNull(_argIndex);
    } else {
      _statement.bindString(_argIndex, strSearch);
    }
    final Cursor _cursor = __db.query(_statement);
    try {
      final int _cursorIndexOfNid = _cursor.getColumnIndexOrThrow("nid");
      final int _cursorIndexOfTitle = _cursor.getColumnIndexOrThrow("title");
      final int _cursorIndexOfFieldImage = _cursor.getColumnIndexOrThrow("field_image");
      final int _cursorIndexOfFieldCoverImage = _cursor.getColumnIndexOrThrow("field_cover_image");
      final int _cursorIndexOfFieldShortDescription = _cursor.getColumnIndexOrThrow("field_short_description");
      final int _cursorIndexOfFieldThematicArea = _cursor.getColumnIndexOrThrow("field_thematic_area");
      final int _cursorIndexOfFieldDescription = _cursor.getColumnIndexOrThrow("field_description");
      final int _cursorIndexOfFieldAgeGroup = _cursor.getColumnIndexOrThrow("field_age_group");
      final int _cursorIndexOfFieldObjective = _cursor.getColumnIndexOrThrow("field_objective");
      final int _cursorIndexOfFieldTags = _cursor.getColumnIndexOrThrow("field_tags");
      final int _cursorIndexOfFieldVideo = _cursor.getColumnIndexOrThrow("field_video");
      final int _cursorIndexOfFieldHotSrhContent = _cursor.getColumnIndexOrThrow("field_hot_srh_content");
      final int _cursorIndexOfFieldSmsText = _cursor.getColumnIndexOrThrow("field_sms_text");
      final int _cursorIndexOfIsFavourite = _cursor.getColumnIndexOrThrow("isFavourite");
      final int _cursorIndexOfFieldThematicAreaId = _cursor.getColumnIndexOrThrow("field_thematic_area_id");
      final List<SRHContent> _result = new ArrayList<SRHContent>(_cursor.getCount());
      while(_cursor.moveToNext()) {
        final SRHContent _item;
        final String _tmpNid;
        _tmpNid = _cursor.getString(_cursorIndexOfNid);
        final String _tmpTitle;
        _tmpTitle = _cursor.getString(_cursorIndexOfTitle);
        final String _tmpField_image;
        _tmpField_image = _cursor.getString(_cursorIndexOfFieldImage);
        final String _tmpField_cover_image;
        _tmpField_cover_image = _cursor.getString(_cursorIndexOfFieldCoverImage);
        final String _tmpField_short_description;
        _tmpField_short_description = _cursor.getString(_cursorIndexOfFieldShortDescription);
        final String _tmpField_thematic_area;
        _tmpField_thematic_area = _cursor.getString(_cursorIndexOfFieldThematicArea);
        final String _tmpField_description;
        _tmpField_description = _cursor.getString(_cursorIndexOfFieldDescription);
        final String _tmpField_age_group;
        _tmpField_age_group = _cursor.getString(_cursorIndexOfFieldAgeGroup);
        final String _tmpField_objective;
        _tmpField_objective = _cursor.getString(_cursorIndexOfFieldObjective);
        final String _tmpField_tags;
        _tmpField_tags = _cursor.getString(_cursorIndexOfFieldTags);
        final String _tmpField_video;
        _tmpField_video = _cursor.getString(_cursorIndexOfFieldVideo);
        final String _tmpField_hot_srh_content;
        _tmpField_hot_srh_content = _cursor.getString(_cursorIndexOfFieldHotSrhContent);
        final String _tmpField_sms_text;
        _tmpField_sms_text = _cursor.getString(_cursorIndexOfFieldSmsText);
        final boolean _tmpIsFavourite;
        final int _tmp;
        _tmp = _cursor.getInt(_cursorIndexOfIsFavourite);
        _tmpIsFavourite = _tmp != 0;
        final String _tmpField_thematic_area_id;
        _tmpField_thematic_area_id = _cursor.getString(_cursorIndexOfFieldThematicAreaId);
        _item = new SRHContent(_tmpNid,_tmpTitle,_tmpField_image,_tmpField_cover_image,_tmpField_short_description,_tmpField_thematic_area,_tmpField_description,_tmpField_age_group,_tmpField_objective,_tmpField_tags,_tmpField_video,_tmpField_hot_srh_content,_tmpField_sms_text,_tmpIsFavourite,_tmpField_thematic_area_id);
        _result.add(_item);
      }
      return _result;
    } finally {
      _cursor.close();
      _statement.release();
    }
  }

  @Override
  public List<SRHContent> getContentTagwise(String strTag) {
    final String _sql = "SELECT * from content_master WHERE field_tags LIKE '%'|| ? ||'%'";
    final RoomSQLiteQuery _statement = RoomSQLiteQuery.acquire(_sql, 1);
    int _argIndex = 1;
    if (strTag == null) {
      _statement.bindNull(_argIndex);
    } else {
      _statement.bindString(_argIndex, strTag);
    }
    final Cursor _cursor = __db.query(_statement);
    try {
      final int _cursorIndexOfNid = _cursor.getColumnIndexOrThrow("nid");
      final int _cursorIndexOfTitle = _cursor.getColumnIndexOrThrow("title");
      final int _cursorIndexOfFieldImage = _cursor.getColumnIndexOrThrow("field_image");
      final int _cursorIndexOfFieldCoverImage = _cursor.getColumnIndexOrThrow("field_cover_image");
      final int _cursorIndexOfFieldShortDescription = _cursor.getColumnIndexOrThrow("field_short_description");
      final int _cursorIndexOfFieldThematicArea = _cursor.getColumnIndexOrThrow("field_thematic_area");
      final int _cursorIndexOfFieldDescription = _cursor.getColumnIndexOrThrow("field_description");
      final int _cursorIndexOfFieldAgeGroup = _cursor.getColumnIndexOrThrow("field_age_group");
      final int _cursorIndexOfFieldObjective = _cursor.getColumnIndexOrThrow("field_objective");
      final int _cursorIndexOfFieldTags = _cursor.getColumnIndexOrThrow("field_tags");
      final int _cursorIndexOfFieldVideo = _cursor.getColumnIndexOrThrow("field_video");
      final int _cursorIndexOfFieldHotSrhContent = _cursor.getColumnIndexOrThrow("field_hot_srh_content");
      final int _cursorIndexOfFieldSmsText = _cursor.getColumnIndexOrThrow("field_sms_text");
      final int _cursorIndexOfIsFavourite = _cursor.getColumnIndexOrThrow("isFavourite");
      final int _cursorIndexOfFieldThematicAreaId = _cursor.getColumnIndexOrThrow("field_thematic_area_id");
      final List<SRHContent> _result = new ArrayList<SRHContent>(_cursor.getCount());
      while(_cursor.moveToNext()) {
        final SRHContent _item;
        final String _tmpNid;
        _tmpNid = _cursor.getString(_cursorIndexOfNid);
        final String _tmpTitle;
        _tmpTitle = _cursor.getString(_cursorIndexOfTitle);
        final String _tmpField_image;
        _tmpField_image = _cursor.getString(_cursorIndexOfFieldImage);
        final String _tmpField_cover_image;
        _tmpField_cover_image = _cursor.getString(_cursorIndexOfFieldCoverImage);
        final String _tmpField_short_description;
        _tmpField_short_description = _cursor.getString(_cursorIndexOfFieldShortDescription);
        final String _tmpField_thematic_area;
        _tmpField_thematic_area = _cursor.getString(_cursorIndexOfFieldThematicArea);
        final String _tmpField_description;
        _tmpField_description = _cursor.getString(_cursorIndexOfFieldDescription);
        final String _tmpField_age_group;
        _tmpField_age_group = _cursor.getString(_cursorIndexOfFieldAgeGroup);
        final String _tmpField_objective;
        _tmpField_objective = _cursor.getString(_cursorIndexOfFieldObjective);
        final String _tmpField_tags;
        _tmpField_tags = _cursor.getString(_cursorIndexOfFieldTags);
        final String _tmpField_video;
        _tmpField_video = _cursor.getString(_cursorIndexOfFieldVideo);
        final String _tmpField_hot_srh_content;
        _tmpField_hot_srh_content = _cursor.getString(_cursorIndexOfFieldHotSrhContent);
        final String _tmpField_sms_text;
        _tmpField_sms_text = _cursor.getString(_cursorIndexOfFieldSmsText);
        final boolean _tmpIsFavourite;
        final int _tmp;
        _tmp = _cursor.getInt(_cursorIndexOfIsFavourite);
        _tmpIsFavourite = _tmp != 0;
        final String _tmpField_thematic_area_id;
        _tmpField_thematic_area_id = _cursor.getString(_cursorIndexOfFieldThematicAreaId);
        _item = new SRHContent(_tmpNid,_tmpTitle,_tmpField_image,_tmpField_cover_image,_tmpField_short_description,_tmpField_thematic_area,_tmpField_description,_tmpField_age_group,_tmpField_objective,_tmpField_tags,_tmpField_video,_tmpField_hot_srh_content,_tmpField_sms_text,_tmpIsFavourite,_tmpField_thematic_area_id);
        _result.add(_item);
      }
      return _result;
    } finally {
      _cursor.close();
      _statement.release();
    }
  }

  @Override
  public List<SRHContent> getContentListSearchTags(String strTag, String strSearch) {
    final String _sql = "SELECT * from content_master WHERE (field_tags LIKE '%'|| ? ||'%' ) AND (title LIKE '%' || ? || '%' OR  field_short_description LIKE '%' || ? || '%')";
    final RoomSQLiteQuery _statement = RoomSQLiteQuery.acquire(_sql, 3);
    int _argIndex = 1;
    if (strTag == null) {
      _statement.bindNull(_argIndex);
    } else {
      _statement.bindString(_argIndex, strTag);
    }
    _argIndex = 2;
    if (strSearch == null) {
      _statement.bindNull(_argIndex);
    } else {
      _statement.bindString(_argIndex, strSearch);
    }
    _argIndex = 3;
    if (strSearch == null) {
      _statement.bindNull(_argIndex);
    } else {
      _statement.bindString(_argIndex, strSearch);
    }
    final Cursor _cursor = __db.query(_statement);
    try {
      final int _cursorIndexOfNid = _cursor.getColumnIndexOrThrow("nid");
      final int _cursorIndexOfTitle = _cursor.getColumnIndexOrThrow("title");
      final int _cursorIndexOfFieldImage = _cursor.getColumnIndexOrThrow("field_image");
      final int _cursorIndexOfFieldCoverImage = _cursor.getColumnIndexOrThrow("field_cover_image");
      final int _cursorIndexOfFieldShortDescription = _cursor.getColumnIndexOrThrow("field_short_description");
      final int _cursorIndexOfFieldThematicArea = _cursor.getColumnIndexOrThrow("field_thematic_area");
      final int _cursorIndexOfFieldDescription = _cursor.getColumnIndexOrThrow("field_description");
      final int _cursorIndexOfFieldAgeGroup = _cursor.getColumnIndexOrThrow("field_age_group");
      final int _cursorIndexOfFieldObjective = _cursor.getColumnIndexOrThrow("field_objective");
      final int _cursorIndexOfFieldTags = _cursor.getColumnIndexOrThrow("field_tags");
      final int _cursorIndexOfFieldVideo = _cursor.getColumnIndexOrThrow("field_video");
      final int _cursorIndexOfFieldHotSrhContent = _cursor.getColumnIndexOrThrow("field_hot_srh_content");
      final int _cursorIndexOfFieldSmsText = _cursor.getColumnIndexOrThrow("field_sms_text");
      final int _cursorIndexOfIsFavourite = _cursor.getColumnIndexOrThrow("isFavourite");
      final int _cursorIndexOfFieldThematicAreaId = _cursor.getColumnIndexOrThrow("field_thematic_area_id");
      final List<SRHContent> _result = new ArrayList<SRHContent>(_cursor.getCount());
      while(_cursor.moveToNext()) {
        final SRHContent _item;
        final String _tmpNid;
        _tmpNid = _cursor.getString(_cursorIndexOfNid);
        final String _tmpTitle;
        _tmpTitle = _cursor.getString(_cursorIndexOfTitle);
        final String _tmpField_image;
        _tmpField_image = _cursor.getString(_cursorIndexOfFieldImage);
        final String _tmpField_cover_image;
        _tmpField_cover_image = _cursor.getString(_cursorIndexOfFieldCoverImage);
        final String _tmpField_short_description;
        _tmpField_short_description = _cursor.getString(_cursorIndexOfFieldShortDescription);
        final String _tmpField_thematic_area;
        _tmpField_thematic_area = _cursor.getString(_cursorIndexOfFieldThematicArea);
        final String _tmpField_description;
        _tmpField_description = _cursor.getString(_cursorIndexOfFieldDescription);
        final String _tmpField_age_group;
        _tmpField_age_group = _cursor.getString(_cursorIndexOfFieldAgeGroup);
        final String _tmpField_objective;
        _tmpField_objective = _cursor.getString(_cursorIndexOfFieldObjective);
        final String _tmpField_tags;
        _tmpField_tags = _cursor.getString(_cursorIndexOfFieldTags);
        final String _tmpField_video;
        _tmpField_video = _cursor.getString(_cursorIndexOfFieldVideo);
        final String _tmpField_hot_srh_content;
        _tmpField_hot_srh_content = _cursor.getString(_cursorIndexOfFieldHotSrhContent);
        final String _tmpField_sms_text;
        _tmpField_sms_text = _cursor.getString(_cursorIndexOfFieldSmsText);
        final boolean _tmpIsFavourite;
        final int _tmp;
        _tmp = _cursor.getInt(_cursorIndexOfIsFavourite);
        _tmpIsFavourite = _tmp != 0;
        final String _tmpField_thematic_area_id;
        _tmpField_thematic_area_id = _cursor.getString(_cursorIndexOfFieldThematicAreaId);
        _item = new SRHContent(_tmpNid,_tmpTitle,_tmpField_image,_tmpField_cover_image,_tmpField_short_description,_tmpField_thematic_area,_tmpField_description,_tmpField_age_group,_tmpField_objective,_tmpField_tags,_tmpField_video,_tmpField_hot_srh_content,_tmpField_sms_text,_tmpIsFavourite,_tmpField_thematic_area_id);
        _result.add(_item);
      }
      return _result;
    } finally {
      _cursor.close();
      _statement.release();
    }
  }
}
