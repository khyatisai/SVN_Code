package com.unfpa.appsistenciamaternaunfpa.database.dao.my_knowledge;

import android.database.Cursor;
import androidx.room.EntityInsertionAdapter;
import androidx.room.RoomDatabase;
import androidx.room.RoomSQLiteQuery;
import androidx.room.SharedSQLiteStatement;
import androidx.sqlite.db.SupportSQLiteStatement;
import com.unfpa.appsistenciamaternaunfpa.database.entity.my_knowledge.SRHContentCategory;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.ArrayList;
import java.util.List;

@SuppressWarnings("unchecked")
public final class SRHContentCategoryDAO_Impl implements SRHContentCategoryDAO {
  private final RoomDatabase __db;

  private final EntityInsertionAdapter __insertionAdapterOfSRHContentCategory;

  private final SharedSQLiteStatement __preparedStmtOfDeleteAll;

  public SRHContentCategoryDAO_Impl(RoomDatabase __db) {
    this.__db = __db;
    this.__insertionAdapterOfSRHContentCategory = new EntityInsertionAdapter<SRHContentCategory>(__db) {
      @Override
      public String createQuery() {
        return "INSERT OR IGNORE INTO `content_category`(`category_id`,`name`,`description_guide`,`description_class`) VALUES (?,?,?,?)";
      }

      @Override
      public void bind(SupportSQLiteStatement stmt, SRHContentCategory value) {
        if (value.getCategory_id() == null) {
          stmt.bindNull(1);
        } else {
          stmt.bindString(1, value.getCategory_id());
        }
        if (value.getName() == null) {
          stmt.bindNull(2);
        } else {
          stmt.bindString(2, value.getName());
        }
        if (value.getDescription_guide() == null) {
          stmt.bindNull(3);
        } else {
          stmt.bindString(3, value.getDescription_guide());
        }
        if (value.getDescription_class() == null) {
          stmt.bindNull(4);
        } else {
          stmt.bindString(4, value.getDescription_class());
        }
      }
    };
    this.__preparedStmtOfDeleteAll = new SharedSQLiteStatement(__db) {
      @Override
      public String createQuery() {
        final String _query = "DELETE FROM content_category";
        return _query;
      }
    };
  }

  @Override
  public void insert(SRHContentCategory contentCategory) {
    __db.beginTransaction();
    try {
      __insertionAdapterOfSRHContentCategory.insert(contentCategory);
      __db.setTransactionSuccessful();
    } finally {
      __db.endTransaction();
    }
  }

  @Override
  public void deleteAll() {
    final SupportSQLiteStatement _stmt = __preparedStmtOfDeleteAll.acquire();
    __db.beginTransaction();
    try {
      _stmt.executeUpdateDelete();
      __db.setTransactionSuccessful();
    } finally {
      __db.endTransaction();
      __preparedStmtOfDeleteAll.release(_stmt);
    }
  }

  @Override
  public List<SRHContentCategory> getCategories() {
    final String _sql = "SELECT * from content_category";
    final RoomSQLiteQuery _statement = RoomSQLiteQuery.acquire(_sql, 0);
    final Cursor _cursor = __db.query(_statement);
    try {
      final int _cursorIndexOfCategoryId = _cursor.getColumnIndexOrThrow("category_id");
      final int _cursorIndexOfName = _cursor.getColumnIndexOrThrow("name");
      final int _cursorIndexOfDescriptionGuide = _cursor.getColumnIndexOrThrow("description_guide");
      final int _cursorIndexOfDescriptionClass = _cursor.getColumnIndexOrThrow("description_class");
      final List<SRHContentCategory> _result = new ArrayList<SRHContentCategory>(_cursor.getCount());
      while(_cursor.moveToNext()) {
        final SRHContentCategory _item;
        final String _tmpCategory_id;
        _tmpCategory_id = _cursor.getString(_cursorIndexOfCategoryId);
        final String _tmpName;
        _tmpName = _cursor.getString(_cursorIndexOfName);
        final String _tmpDescription_guide;
        _tmpDescription_guide = _cursor.getString(_cursorIndexOfDescriptionGuide);
        final String _tmpDescription_class;
        _tmpDescription_class = _cursor.getString(_cursorIndexOfDescriptionClass);
        _item = new SRHContentCategory(_tmpCategory_id,_tmpName,_tmpDescription_guide,_tmpDescription_class);
        _result.add(_item);
      }
      return _result;
    } finally {
      _cursor.close();
      _statement.release();
    }
  }
}
